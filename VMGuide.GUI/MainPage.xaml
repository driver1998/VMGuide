<Page x:Name="MainPage" x:Class="VMGuide.Main"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:VMGuide"
      mc:Ignorable="d" Background="Transparent"
      d:DesignHeight="500" d:DesignWidth="700"
      Loaded="MainPage_Loaded"
      Title="{Binding ElementName=title,Path=Text}">
    <Page.Resources>
        <local:BooleanToCollapseConverter x:Key="BooleanToCollapseConverter"/>
        <local:BooleanReverseConverter x:Key="BooleanReverseConverter"/>
        <local:VMwareValueToDescriptionConverter x:Key="VMwareValueToDescriptionConverter"/>
        <local:BooleanReverseToCollapseConverter x:Key="BooleanReverseToCollapseConverter"/>
        <Style TargetType="ComboBoxItem" >
            <Setter Property="Template" >
                <Setter.Value >
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border Background="{TemplateBinding Background}" Height="40">
                            <TextBlock Margin="10,0,10,0" FontSize="14" VerticalAlignment="Center"  Foreground="{TemplateBinding Foreground }"
                                       Text="{TemplateBinding Content, Converter={StaticResource VMwareValueToDescriptionConverter}}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers >
                <Trigger Property="IsFocused" Value="true">
                    <Setter Property="Background" Value="#DADADA"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="ComboBox">
            <Setter Property="Width" Value="272"/>
            <Setter Property="Template" >
                <Setter.Value >
                    <ControlTemplate TargetType="ComboBox">
                        <Grid Margin="0,0,0,0"  VerticalAlignment="Top" >
                            <ToggleButton x:Name="Toggle" Content="{TemplateBinding Text, Converter={StaticResource VMwareValueToDescriptionConverter }}"
                                              BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"  OpacityMask="{TemplateBinding OpacityMask}"
                                              HorizontalAlignment="Left" Height="32" Width="272" Focusable="False" Foreground="{TemplateBinding Foreground}"
                                              IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropDownOpen, Mode=TwoWay }">
                                <ToggleButton.Template >
                                    <ControlTemplate TargetType="ToggleButton" >
                                        <Border BorderThickness="2.5" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                                            <Grid >
                                                <ContentPresenter Margin="10,0,50,0" VerticalAlignment="Center" TextBlock.FontSize="14" TextBlock.Foreground="{TemplateBinding Foreground}" />
                                                <TextBlock HorizontalAlignment="Right" VerticalAlignment="Center" 
                                                               Width="10.4" Margin="0,0,10,0" Text="&#xE099;" Foreground="{TemplateBinding OpacityMask}"
                                                               FontFamily="Resources/#Segoe MDL2 Assets" FontSize="10.4"/>
                                            </Grid>
                                        </Border>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <Popup IsOpen="{TemplateBinding IsDropDownOpen}"  Width="272" HorizontalAlignment="Left">
                                <Border>
                                    <Grid MinWidth="{TemplateBinding MinWidth }" MinHeight="{TemplateBinding MinHeight }">
                                        <ScrollViewer >
                                            <StackPanel Background="#F2F2F2" IsItemsHost="True" />
                                        </ScrollViewer>
                                    </Grid>
                                </Border>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers >
                <Trigger Property="IsEnabled" Value="true">
                    <Setter Property="BorderBrush" Value="#999999" />
                    <Setter Property="Background" Value="White" />
                    <Setter Property="Foreground"  Value="Black" />
                    <Setter Property="OpacityMask" Value="#5d5d5d"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="BorderBrush" Value="#cccccc" />
                    <Setter Property="Background" Value="#cccccc" />
                    <Setter Property="Foreground"  Value="#7a7a7a" />
                    <Setter Property="OpacityMask" Value="#9d9d9d"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="BorderBrush" Value="#666666" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <ControlTemplate TargetType="Button" x:Key="ButtonTemplate">
            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush }">
                <ContentPresenter TextBlock.FontFamily="Resources/#Segoe MDL2 Assets" 
                                                              TextBlock.FontSize="{TemplateBinding FontSize}" 
                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment }">
                </ContentPresenter>
            </Border>
        </ControlTemplate>
        <ControlTemplate TargetType="ListBox" x:Key="ListBoxTemplate">
            <StackPanel IsItemsHost="True"/>
        </ControlTemplate>
        <Style TargetType="ListBoxItem">
            <Setter Property="Template" >
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Grid Background="{TemplateBinding Background}">
                            <Grid Margin="10,10,0,10">
                                <TextBlock Text="{TemplateBinding Content,Converter={StaticResource VMwareValueToDescriptionConverter}}" 
                                       FontSize="14" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center"/>
                            </Grid>
                           
                            <ComboBox Text="{TemplateBinding Content}" Margin="10,10,0,10" HorizontalAlignment="Left" 
                                      Visibility="{TemplateBinding IsSelected,Converter={StaticResource BooleanToCollapseConverter}}" SelectionChanged="ComboBox_SelectionChanged">
                                <ComboBoxItem>vlance</ComboBoxItem>
                                <ComboBoxItem>e1000</ComboBoxItem>
                                <ComboBoxItem>e1000e</ComboBoxItem>
                                <ComboBoxItem>vmxnet</ComboBoxItem>
                                <ComboBoxItem>vmxnet3</ComboBoxItem>
                            </ComboBox>
                            <Button Margin="290,10,0,10" Width="32" Height="32" HorizontalAlignment="Left" VerticalAlignment="Top"
                                    Visibility="{TemplateBinding IsSelected,Converter={StaticResource BooleanToCollapseConverter}}"
                                    Template="{StaticResource ButtonTemplate }" Content="&#xE74D;" FontSize="14" Click="DeleteNIC_Button_Click" >
                                <Button.Style >
                                    <Style TargetType="Button" >
                                        <Setter Property="Background" Value="#e6e6e6" />
                                        <Style.Triggers >
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter Property="Background" Value="#dadada"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="true">
                                                <Setter Property="Background" Value="#c2c2c2"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                                </Button> 
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers >
                <Trigger Property="IsMouseOver" Value=" True">
                    <Setter Property="Background" Value="#dadada"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="true">
                    <Setter Property="Background" Value="#f2f2f2"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="true">
                    <Setter Property="Foreground" Value="Black" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="#7a7a7a" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="RadioButton" >
            <Setter Property="Height" Value="48"/>
            <Setter Property="Template">
                <Setter.Value >
                    <ControlTemplate TargetType="RadioButton" >
                        <Grid Background="{TemplateBinding Background}">
                            <TextBlock Text="{TemplateBinding Uid}" FontSize="16" Margin="15" Width="16" Height="16" HorizontalAlignment="Left"  VerticalAlignment="Center" FontFamily="Resources/#Segoe MDL2 Assets"></TextBlock>
                            <ContentPresenter TextBlock.FontSize="14" Margin="40,0,10,0" VerticalAlignment="Center" TextBlock.Foreground="{TemplateBinding Foreground}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers >
                <Trigger Property="IsChecked" Value="true">
                    <Setter Property="Foreground" Value="#0063b1"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="#dadada"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="false">
                    <Setter Property="Background" Value="#f2f2f2"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="TextBlock" x:Key="GroupTitle">
            <Setter Property="FontSize" Value="25"/>
            <Setter Property="Margin" Value="0,30,0,10"/>
            <Setter Property="Foreground" Value="black"/>
            <Setter Property="VerticalAlignment"  Value="Bottom" />
        </Style>
        <Style TargetType="CheckBox">
            <Setter Property="Height" Value="80"/>
            <Setter Property="Template" >
                <Setter.Value >
                    <ControlTemplate TargetType="CheckBox" >
                        <Grid>
                            <ContentPresenter TextBlock.FontSize="14" TextBlock.Foreground="Black" Margin="0,10,0,0" VerticalAlignment="top"/>
                            <Grid Width="44" Height="44" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="0,25,0,0">
                                <TextBlock Text="{TemplateBinding Uid}" FontFamily="Resources/#Segoe MDL2 Assets" FontSize="44" Width="44" Height="44" HorizontalAlignment="Left"  VerticalAlignment="Center"  Foreground="{TemplateBinding Background}"/>
                                <TextBlock x:Name="CheckBoxBall" Text="&#xEC14;" FontFamily="Resources/#Segoe MDL2 Assets" FontSize="10.4" Width="10.4" Height="10.4" HorizontalAlignment="Left"  VerticalAlignment="Center"  Margin="{TemplateBinding Padding}"  Foreground="{TemplateBinding Foreground}"/>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers >
                <Trigger Property="IsChecked" Value="true">
                    <Setter  Property="Padding"  Value="29,0,0,0"/>
                    <Setter Property="Uid" Value="&#xEC11;"/>
                    <Setter Property="Background" Value="#0063B1" />
                    <Setter Property="Foreground"  Value="White"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="false">
                    <Setter  Property="Padding"  Value="4.7,0,0,0"/>
                    <Setter Property="Uid" Value="&#xEC12;"/>
                    <Setter Property="Background" Value="Black"  />
                    <Setter Property="Foreground"  Value="Black"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Uid" Value="&#xEC12;"/>
                    <Setter Property="Background" Value="#999999"/>
                    <Setter Property="Foreground"  Value="#999999"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="DatePicker" >

            <Setter Property="Height" Value="87"/>
            <Setter Property="Template" >
                <Setter.Value >
                    <ControlTemplate TargetType="DatePicker">
                        <Grid  Background="White">
                            <TextBlock Text="{TemplateBinding Uid}" FontSize="14" Margin="0,10,0,0" VerticalAlignment="top" Foreground="Black" />
                            <Grid Margin="0,40,0,0" Height="32" Width="272"  VerticalAlignment="Top" HorizontalAlignment="Left" >
                                <Border BorderThickness="2.5" BorderBrush="{TemplateBinding BorderBrush}" >
                                    <Grid>
                                        <DatePickerTextBox  x:Name="PART_TextBox" Margin="10,0,40,0" VerticalAlignment ="Center" 
                                                                FontSize="14" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}">
                                            <DatePickerTextBox.Template >
                                                <ControlTemplate TargetType="DatePickerTextBox" >
                                                    <ScrollViewer x:Name="PART_ContentHost"/>
                                                </ControlTemplate>
                                            </DatePickerTextBox.Template>
                                        </DatePickerTextBox>
                                        <Button x:Name="PART_Button" HorizontalAlignment="Right" Width="30" Foreground="{TemplateBinding OpacityMask}" Focusable="False">
                                            <Button.Template >
                                                <ControlTemplate TargetType="Button">
                                                    <TextBlock HorizontalAlignment="Center"  VerticalAlignment="Center" 
                                                               Width="14" Text="&#xE163;"  Foreground="{TemplateBinding Foreground}"
                                                               FontFamily="Resources/#Segoe MDL2 Assets" FontSize="14"/>
                                                </ControlTemplate>
                                            </Button.Template>
                                        </Button>
                                        <Popup x:Name="PART_Popup" AllowsTransparency="True" StaysOpen="False"/>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers >
                <Trigger Property="IsEnabled" Value="true">
                    <Setter Property="BorderBrush" Value="#999999" />
                    <Setter Property="Background" Value="White" />
                    <Setter Property="Foreground"  Value="Black" />
                    <Setter Property="OpacityMask" Value="#5d5d5d"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="BorderBrush" Value="#cccccc" />
                    <Setter Property="Background" Value="#cccccc" />
                    <Setter Property="Foreground"  Value="#7a7a7a" />
                    <Setter Property="OpacityMask" Value="#9d9d9d"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="BorderBrush" Value="#666666" />
                </Trigger>
                <DataTrigger Binding="{Binding ElementName=check_biosdate, Path=IsChecked}" Value="true">
                    <Setter Property="SelectedDate" Value="{Binding ElementName=MainPage, Path=CurrentVM.BIOSDate}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Page.Resources>
    
    <Grid>
        <Border BorderBrush="#184689" Margin="5" BorderThickness="2">
            <Border.Effect>
                <DropShadowEffect BlurRadius="5" Direction="-90" ShadowDepth="0"/>
            </Border.Effect>
        </Border>
        <Grid Background="White" Margin="5">
            <Grid.RowDefinitions>
                <RowDefinition Height="32"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            
            <Grid x:Name="TitleBar" Height="32" Grid.RowSpan="1" Background="#184689" MouseMove="TitleBar_MouseMove" >
                <Button Width="48" HorizontalAlignment="Left" Content="&#xE112;" Foreground="White"  
                        Template="{StaticResource ButtonTemplate }" Click="BackButton_Click">
                    <Button.Style >
                        <Style TargetType="Button" >
                            <Setter Property="Background" Value="#004275"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value=" true">
                                    <Setter Property="Background" Value="#195482"/>
                                </Trigger>
                                <Trigger Property="IsFocused" Value=" true">
                                    <Setter Property="Background" Value="#195482"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value=" true">
                                    <Setter Property="Background" Value="#336790"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Width="48" Margin="0,0,48,0" Foreground="White" HorizontalAlignment="Right"  
                        Content="&#xE108;" FontSize="10" Height="32" BorderThickness="0" 
                        VerticalAlignment="Top" Click="MinimizeButton_Click" Focusable="False"
                        Template="{StaticResource ButtonTemplate }">
                    <Button.Style>
                        <Style TargetType="Button" >
                            <Setter Property="Background" Value="Transparent"/>
                            <Style.Triggers >
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" Value="#0063b1"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Background" Value="#007acc"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Width="48"  Foreground="White" HorizontalAlignment="Right" Content="&#xE106;" 
                        FontSize="10" Height="32" BorderThickness="0" VerticalAlignment="Top" Click="CloseButton_Click" 
                        Template="{StaticResource ButtonTemplate }" Focusable="False" >
                    <Button.Style>
                        <Style TargetType="Button" >
                            <Setter Property="Background" Value="Transparent"/>
                            <Style.Triggers >
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" Value="#e81123"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Background" Value="#f1707a"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <TextBlock x:Name="title" Text="{Binding ElementName=MainPage,Path=CurrentVM.Name}" 
                           Foreground="White" VerticalAlignment="Center" Margin="60,0,120,0"/>
            </Grid>
            
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions >
                    <ColumnDefinition Width=" 200"/>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <StackPanel  Grid.Column="0" Background="#f2f2f2" >
                    <RadioButton x:Name="radio_bios" VerticalAlignment="Top" Uid="&#xE115;" Content="BIOS Settings" Margin="0,10,0,0" IsChecked="True" />
                    <RadioButton x:Name="radio_hw" VerticalAlignment="Top" Uid="&#xE964;" Content="Hardware Settings" Visibility="{Binding ElementName=MainPage, Path=IsVMware, Converter={StaticResource BooleanToCollapseConverter}}"/>
                </StackPanel>

                <ScrollViewer Grid.Column="1" VerticalScrollBarVisibility="Auto">
                    <StackPanel>
                        <TextBlock Foreground="#cc211e" FontSize="14" TextWrapping="Wrap" Margin="30,30,30,0" 
                               Visibility="{Binding ElementName=MainPage,Path=CurrentVM.IsLocked,Converter={StaticResource BooleanToCollapseConverter }}"
                               Text="This Virtual Machine is Locked by your hypervisor, exit your hypervisor and try again."/>

                        <StackPanel Margin="30,0,30,50"
                                        Visibility="{Binding ElementName=radio_bios,Path=IsChecked,Converter={StaticResource BooleanToCollapseConverter }}" 
                                        IsEnabled="{Binding ElementName=MainPage ,Path=CurrentVM.IsLocked,Converter={StaticResource BooleanReverseConverter}}">
                            <TextBlock Text="{Binding ElementName=radio_bios,Path=Content}" Style="{StaticResource GroupTitle}"/>
                            <CheckBox x:Name="check_biosdate" Content="BIOS Date Lock"/>
                            <DatePicker VerticalContentAlignment="Center"  x:Name="datepicker"
                                        IsEnabled="{Binding ElementName=check_biosdate, Path=IsChecked}"
                                            Visibility="{Binding ElementName=check_biosdate ,Path=IsChecked,Converter={StaticResource BooleanToCollapseConverter}}"
                                            Uid="BIOS Date">
                            </DatePicker>
                            <CheckBox Content="ACPI Enabled" IsChecked="{Binding ElementName=MainPage ,Path=CurrentVM.ACPI}"
                                      Visibility="{Binding ElementName=MainPage,Path=IsVirtualPC,Converter={StaticResource BooleanReverseToCollapseConverter}}"/>
                        </StackPanel>

                        <StackPanel Margin="30,0,30,50"
                                        Visibility="{Binding ElementName=radio_hw,Path=IsChecked,Converter={StaticResource BooleanToCollapseConverter }}"
                                        IsEnabled="{Binding ElementName=MainPage ,Path=CurrentVM.IsLocked,Converter={StaticResource BooleanReverseConverter}}">
                            <TextBlock Text="{Binding ElementName=radio_hw,Path=Content}" Style="{StaticResource GroupTitle}"/>
                            
                            <Grid Background="White" Height="87">
                                <TextBlock Text="Firmware" FontSize="14" Margin="0,10,0,0" VerticalAlignment="top" Foreground="Black" />
                                <ComboBox x:Name="combo_fw" Margin="0,40,0,15" Text="{Binding ElementName=MainPage,Path=CurrentVMwareVM.Firmware}" HorizontalAlignment="Left" >
                                    <ComboBoxItem Content="bios"/>
                                    <ComboBoxItem Content="efi"/>
                                </ComboBox>
                            </Grid>

                            <Grid Background="White" Height="87">
                                <TextBlock Text="Sound Card" FontSize="14" Margin="0,10,0,0" VerticalAlignment="top" Foreground="Black" />
                                <ComboBox x:Name="combo_snd" Margin="0,40,0,15" Text="{Binding ElementName=MainPage,Path=CurrentVMwareVM.SoundCard}" HorizontalAlignment="Left" >
                                    <ComboBoxItem Content="sb16"/>
                                    <ComboBoxItem Content="es1371"/>
                                    <ComboBoxItem Content="hdaudio"/>
                                    <ComboBoxItem Content="none"/>
                                </ComboBox>
                            </Grid>

                            <StackPanel Visibility="{Binding ElementName=MainPage, Path=IsVMware,Converter={StaticResource BooleanToCollapseConverter}}">
                                <TextBlock Text="Network Adapters" Style="{StaticResource GroupTitle}"/>
                                <ListBox x:Name="list_nic" Margin="-10,0,0,0" Template="{StaticResource ListBoxTemplate}" ItemsSource="{Binding ElementName=MainPage,Path=CurrentVMwareNICs}"/>
                                <Button Content="Add a Network Adapter" Cursor="Hand" Margin="0,10,0,10 " Click="AddNIC_Button_Click">
                                    <Button.Template >
                                        <ControlTemplate TargetType="Button" >
                                            <ContentPresenter TextBlock.FontSize="14" TextBlock.Foreground="{TemplateBinding Foreground}"></ContentPresenter>
                                        </ControlTemplate>
                                    </Button.Template>
                                    <Button.Style >
                                        <Style TargetType="Button" >
                                            <Setter Property="Foreground" Value="#0063b1"/>
                                            <Style.Triggers >
                                                <Trigger Property="IsMouseOver" Value="true">
                                                    <Setter Property="Foreground" Value="#666666"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="true">
                                                    <Setter Property="Foreground" Value="#999999"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="false">
                                                    <Setter Property="Foreground" Value="#999999"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </StackPanel>


                        </StackPanel>
                    </StackPanel>
                </ScrollViewer>
            </Grid>
        </Grid>
    </Grid>
</Page>
